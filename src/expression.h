#ifndef EXPRESSION_H
#define EXPRESSION_H

////////////////////////////////////////////////////////////////////////////////
//
// Includes
//
#ifndef EXPRESSION_TREE_H
#	include "expressiontree.h"
#endif

// STD Includes
#include <map>
#include <memory>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
namespace medusa {
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
// class CExpressionBuilder
//
class CExpressionBuilder
{
public:// Constructors
	inline CExpressionBuilder(std::shared_ptr<CModule> pModule);
	inline ~CExpressionBuilder() = default;

public:// Interface Methodes
	std::shared_ptr<IExpression> BuildExpression(int const nOffset);

private:// Members
	std::shared_ptr<CModule> m_pModule;
};
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
// class CExpressionManager
//
class CExpressionManager
{
public:// Constructors
	inline CExpressionManager(std::shared_ptr<CModule> pModule);
	~CExpressionManager() = default;

public:// Interface Methodes
	std::shared_ptr<IExpression> GetExpression(int const nOffset);

private:// Members
	std::map< int, std::shared_ptr<IExpression> > m_mapOffsetToExpression;
	std::unique_ptr<CExpressionBuilder> m_pExpressionBuilder;
};
////////////////////////////////////////////////////////////////////////////////

///////////////////////// Implementing inline methods //////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
// class CExpressionBuilder
//

// Constructors
inline CExpressionBuilder::CExpressionBuilder(std::shared_ptr<CModule> pModule)
	: m_pModule(pModule)
{}

// Interface Methodes

////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
// class CExpressionBuilder
//

// Constructors
inline CExpressionManager::CExpressionManager(std::shared_ptr<CModule> pModule)
	: m_pExpressionBuilder(new CExpressionBuilder(pModule))
{}

// Interface Methodes


////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
} // namespace medusa
////////////////////////////////////////////////////////////////////////////////

#endif // EXPRESSION_H