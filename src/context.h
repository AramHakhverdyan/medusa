#ifndef CONTEXT_H
#define CONTEXT_H

////////////////////////////////////////////////////////////////////////////////
//
// Includes
//
#ifndef MODULE_H
#	include "module.h"
#endif

#ifndef STACK_H
#	include "stack.h"
#endif

// STD Includes
#include <memory>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
namespace medusa {
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
// class CContext
//
class CContext
{
public:// Constructors
	inline CContext(std::shared_ptr<CStack> pStack, std::shared_ptr<CModule> pModule);
	inline ~CContext() = default;

public:// Interface Methodes
	inline std::shared_ptr<CStack> GetStack();
	inline std::shared_ptr<CModule> GetModule();

	inline int& IP();
	inline int& FP();
	inline int& SP();

private:// Members
	std::shared_ptr<CModule> m_pModule;
	std::shared_ptr<CStack> m_pStack;
	int m_nIP;
	int m_nFP;
};
////////////////////////////////////////////////////////////////////////////////

///////////////////////// Implementing inline methods //////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
// class CContext
//

// Constructors
inline CContext::CContext(std::shared_ptr<CStack> pStack, std::shared_ptr<CModule> pModule)
	: m_pStack(pStack),
	m_pModule(pModule),
	m_nIP(0),
	m_nFP(0)
{}

// Interface Methodes
inline std::shared_ptr<CStack> CContext::GetStack()
{
	return m_pStack;
}
inline std::shared_ptr<CModule> CContext::GetModule()
{
	return m_pModule;
}
inline int& CContext::IP()
{
	return m_nIP;
}
inline int& CContext::FP()
{
	return m_nFP;
}
inline int& CContext::SP()
{
	return m_pStack->SP();
}

////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
} // namespace medusa
////////////////////////////////////////////////////////////////////////////////

#endif // CONTEXT_H